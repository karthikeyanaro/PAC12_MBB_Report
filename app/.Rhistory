popasian, popother) %>%
group_by(state)
runApp('Desktop/Info 102/a7-fields8-1863299')
View(df_col)
df_test <- midwest
df_col_test <- df_test %>%
select(county, state, poptotal, popwhite, popblack, popamerindian,
popasian, popother)
colnames(df_col_test) <- c("county", "state", "Total", "White", "Black", "AmerIndian"
, "Asian", "Other")
library(ggplot2)
library(dplyr)
df_test <- midwest
df_col_test <- df_test %>%
select(county, state, poptotal, popwhite, popblack, popamerindian,
popasian, popother)
colnames(df_col_test) <- c("county", "state", "Total", "White", "Black", "AmerIndian"
, "Asian", "Other")
df_col_test %>%
filter(state == "IL")
df_col_test <- df_col_test %>%
filter(state == "IL")
View(df_col_test)
ggplot(df_col_test
, aes(county, Total))
+ geom_bar(stat = "identity")
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
+ labs(title = paste(input$State, "County Population", sep = " "),
x = "County", y = "Population")
ggplot(df_col_test
, aes(county, Total))
+ geom_bar(stat = "identity")
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
+ labs(
x = "County", y = "Population")
ggplot(df_col_test
, aes(county, Total)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "County", y = "Population")
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
setwd("~/Desktop/Info 102/final-ephriamk/scripts")
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
View(player_data)
View(player_data)
newdf <- select(player_data, Pos, Conf, Totals.PTS)
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(Points = sum(Totals.PTS))
View(newdf)
newdf <- select(player_data, Pos, Conf, Totals.PTS)
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(Points = mean(Totals.PTS))
View(newdf)
newdf <- select(player_data, Pos, Conf, Totals.PTS)
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(Points = mean(Totals.PTS)) %>%
`colnames<-`(c("Player Position", "Average Points Per Season"))
View(newdf)
plot_ly(newdf, labels = ~Player Position, values = ~Average Points Per Season,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
newdf <- select(player_data, Pos, Conf, Totals.PTS)
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(Points = mean(Totals.PTS))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position in Pac 12 Conference',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
newdf <- select(player_data, Pos, Conf, Totals.PTS)
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
filter(Totals.Pts > 0) %>%
group_by(Pos) %>%
summarise(Points = mean(Totals.PTS))
newdf <- newdf %>%
filter(Conf == "Pac-12") %>%
filter(Totals.PTS > 0) %>%
group_by(Pos) %>%
summarise(Points = mean(Totals.PTS))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position in Pac 12 Conference',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position in Pac 12 Conference
<br> (For nonzero point players)',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
plot_ly(newdf, labels = ~Pos, values = ~Points,
type = 'pie') %>%
layout(title = 'Average Points Per Season by Player Position in Pac 12 Conference',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
setwd("~/Desktop/Info 102/final-ephriamk/app")
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
conferences <- df %>%
select(Conf) %>%
distinct()
View(df)
shiny::runApp()
View(conferences)
runApp()
runApp()
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
View(df)
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df$3PTS <- df$Totals.3P * 3
pie_df$Pts_Totals <- df$Totals.PTS
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df$ThreePTS <- df$Totals.3P * 3
pie_df$Pts_Totals <- df$Totals.PTS
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df$Three_Pts <- df$Totals.3P * 3
pie_df$Pts_Totals <- df$Totals.PTS
pie_df <- select(pie_df, Conf, Pos, FT_Pts, FG_Pts, Three_Pts, Pts_Total)
View(pie_df)
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df$Three_Pts <- df$Totals.3P * 3
pie_df$Pts_Total <- df$Totals.PTS
pie_df <- select(pie_df, Conf, Pos, FT_Pts, FG_Pts, Three_Pts, Pts_Total)
View(pie_df)
runApp()
pie_df %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(FT_Pts = mean(FT_Pts), FG_Pts = mean(FG_Pts),
Three_Pts = mean(Three_Pts), Pts_Total = mean(Pts_Total))
pie_df %>%
filter(Conf == "Pac-12") %>%
group_by(Pos) %>%
summarise(FT_Pts = mean(FT_Pts), FG_Pts = mean(FG_Pts),
Three_Pts = mean(Three_Pts), Pts_Total = mean(Pts_Total))
runApp()
runApp()
conferences[,1]
pull(pie_df, FT_Pts)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(pie_df)
runApp()
new_pie_df <- pie_df %>%
filter(Conf == "Southland") %>%
group_by(Pos) %>%
summarise(FT_Pts = mean(FT_Pts), FG_Pts = mean(FG_Pts),
Three_Pts = mean(Three_Pts), Pts_Total = mean(Total_Pts))
View(new_pie_df)
runApp()
runApp()
runApp()
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
runApp()
pie_df <- df
pie_df$FT_Pts <- df$Totals.FT
pie_df$FG_Pts <- df$Totals.FG * 2
pie_df$Three_Pts <- df$Totals.3P * 3
pie_df$Total_Pts <- df$Totals.PTS
pie_df <- select(pie_df, Conf, Pos, FT_Pts, FG_Pts, Three_Pts, Total_Pts)
View(pie_df)
runApp()
shiny::runApp()
setwd("~/Desktop/Info 102/final-ephriamk/app")
runApp()
runApp()
runApp()
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("data/Player_Stats.csv", stringsAsFactors = FALSE)
player_data$STL_BLK <- player_data$Totals.STL + player_data$Totals.BLK
player_data$hover <- paste("Player Name: ", player_data$Player, "<br>", "School: ",
player_data$School, sep = "")
player_data <- player_data %>%
filter(Conf == "Pac-12")
ggplot(player_data, aes(STL_BLK, Totals.PF, color = Pos, text = hover)) +
geom_jitter() +
labs(title =" Steals & Blocks vs Total Personal Fouls by Player Position", x = "Steals and Blocks",
y = "Personal Fouls")
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("data/Player_Stats.csv", stringsAsFactors = FALSE)
player_data$STL_BLK <- player_data$Totals.STL + player_data$Totals.BLK
player_data$hover <- paste("Player Name: ", player_data$Player, "<br>", "School: ",
player_data$School, sep = "")
player_data <- player_data %>%
filter(Conf == "Pac-12")
setwd("~/Desktop/Info 102/final-ephriamk/scripts")
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
player_data$STL_BLK <- player_data$Totals.STL + player_data$Totals.BLK
player_data$hover <- paste("Player Name: ", player_data$Player, "<br>", "School: ",
player_data$School, sep = "")
player_data <- player_data %>%
filter(Conf == "Pac-12")
ggplot(player_data, aes(STL_BLK, Totals.PF, color = Pos, text = hover)) +
geom_jitter() +
labs(title =" Steals & Blocks vs Total Personal Fouls by Player Position", x = "Steals and Blocks",
y = "Personal Fouls")
setwd("~/Desktop/Info 102/final-ephriamk/app")
df <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
jitter_df <- df
View(df)
View(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(dplyr)
library(plotly)
library(ggplot2)
player_data <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
shooting_data <- select(player_data, School, Conf, Totals.FGA, Totals.FG)
school_shooting_data <- shooting_data %>%
filter(Conf == "Pac-12") %>%
group_by(School) %>%
summarise(FGA = sum(Totals.FGA), FG = sum(Totals.FG))
school_shooting_data$FG_Missed <- school_shooting_data$FGA - school_shooting_data$FG
to_plot <- tibble(
School = "",
FG_FGM = "",
Num = 0
)
for (school in school_shooting_data$School) {
fg <- school_shooting_data %>%
filter(School == school) %>%
pull(FG)
fgm <- school_shooting_data %>%
filter(School == school) %>%
pull(FG_Missed)
to_plot <- add_row(to_plot, School = school, FG_FGM = "FG Made", Num = fg)
to_plot <- add_row(to_plot, School = school, FG_FGM = "FG Missed", Num = fgm)
to_plot <- add_row(to_plot, School = school, FG_FGM = "Total", Num = fg + fgm)
}
to_plot <- to_plot[-c(1), ]
col_plot <- ggplot(to_plot, aes(School, Num, fill = FG_FGM)) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(col_plot)
View(to_plot)
View(col_plot)
View(to_plot)
View(school_shooting_data)
player_data <- read.csv("../data/Player_Stats.csv", stringsAsFactors = FALSE)
shooting_data <- select(player_data, School, Conf, Totals.FGA, Totals.FG)
View(shooting_data)
View(to_plot)
runApp('~/Desktop/Info 102/final-ephriamk/temp')
runApp('~/Desktop/Info 102/final-ephriamk/temp')
runApp()
runApp()
setwd("~/Desktop/Info 102/final-ephriamk/app")
runApp()
runApp()
runApp('~/Desktop/Info 102/final-ephriamk/temp')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ui <- fluidPage(
includeCSS("../css/styles.css"),
navbarPage(
h2("Final"),
page_one,
page_two,
page_three,
page_four,
page_six,
page_five
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
page_one <- tabPanel(
h3("About"),
column(
11,
align = "center",
offest = 1,
h1("NCAA 2017-2018 College Basketball Statistics"),
h5("Our Ideology"),
h4("Our main objective in this project was to identify general school and player
statistics within the NCAA Men's basketball league."),
h4("The data we used was sourced from an Excel spreadsheet containing player statistics
from the 2017-2018 season. This file had player information including their school, conference,
field goal attempts, field goals made, and other statistics relevant to basketball."),
img("", src = "https://media.giphy.com/media/3oz8xUgF5WLTV3RjFu/giphy.gif",
width = 800),
h5("Our Main Questions"),
p()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/Info 102/final-ephriamk/app")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
